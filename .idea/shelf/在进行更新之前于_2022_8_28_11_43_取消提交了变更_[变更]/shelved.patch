Index: src/Day05_Loop/DoWhileLoop.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Day05_Loop;public class DoWhileLoop {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day05_Loop/DoWhileLoop.java b/src/Day05_Loop/DoWhileLoop.java
--- a/src/Day05_Loop/DoWhileLoop.java	(revision 84b49fea3e843afe85fec090768072255be9ec25)
+++ b/src/Day05_Loop/DoWhileLoop.java	(date 1661395896760)
@@ -1,2 +1,66 @@
-package Day05_Loop;public class DoWhileLoop {
+package Day05_Loop;
+
+/*
+do-while循环的使用
+
+一、循环结构的4个要素
+① 初始化条件
+② 循环条件  --->是boolean类型
+③ 循环体
+④ 迭代条件
+
+二、do-while循环结构：
+
+①
+do{
+	③;
+	④;
+
+}while(②);
+
+执行过程：① - ③ - ④ - ② - ③ - ④ - ... - ②
+
+说明：
+1.do-while循环至少会执行一次循环体！
+2.开发中，使用for和while更多一些。较少使用do-while
+
+*/
+class DoWhileLoop {
+    public static void main(String[] args) {
+
+        //遍历100以内的偶数,并计算所有偶数的和及偶数的个数
+        int num = 1;
+        int sum = 0;//记录总和
+        int count = 0;//记录个数
+        do{
+
+            if(num % 2 == 0){
+                System.out.println(num);
+                sum += num;
+                count++;
+            }
+
+            num++;
+
+        }while(num <= 100);
+
+
+        System.out.println("总和为：" + sum);
+        System.out.println("个数为：" + count);
+
+        //*************体会do-while至少执行一次循环体***************
+        int number1 = 10;
+        while(number1 > 10){
+            System.out.println("hello:while");
+            number1--;
+        }
+
+        int number2 = 10;
+        do{
+            System.out.println("hello:do-while");
+            number2--;
+        }while(number2 > 10);
+
+    }
 }
+
Index: src/Day05_Loop/PrimeNumber_03.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Day05_Loop;public class PrimeNumber_03 {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day05_Loop/PrimeNumber_03.java b/src/Day05_Loop/PrimeNumber_03.java
--- a/src/Day05_Loop/PrimeNumber_03.java	(revision 84b49fea3e843afe85fec090768072255be9ec25)
+++ b/src/Day05_Loop/PrimeNumber_03.java	(date 1661395791653)
@@ -1,2 +1,40 @@
-package Day05_Loop;public class PrimeNumber_03 {
+package Day05_Loop;
+
+
+/*
+100000以内的所有质数的输出。实现方式二
+质数：素数，只能被1和它本身整除的自然数。-->从2开始，到这个数-1结束为止，都不能被这个数本身整除。
+
+对PrimeNumberTest.java文件中质数输出问题的优化
+*/
+
+class PrimeNumber_03 {
+    public static void main(String[] args) {
+
+
+        int count = 0;//记录质数的个数
+
+        //获取当前时间距离1970-01-01 00:00:00 的毫秒数
+        long start = System.currentTimeMillis();
+
+        label:for(int i = 2;i <= 100000;i++){//遍历100000以内的自然数
+
+            for(int j = 2;j <= Math.sqrt(i);j++){//j:被i去除
+
+                if(i % j == 0){ //i被j除尽
+                    continue label;
+                }
+
+            }
+            //能执行到此步骤的，都是质数
+            count++;
+
+        }
+
+        //获取当前时间距离1970-01-01 00:00:00 的毫秒数
+        long end = System.currentTimeMillis();
+        System.out.println("质数的个数为：" + count);
+        System.out.println("所花费的时间为：" + (end - start) + " million seconds");//17110 - 优化一：break:1546 - 优化二：13
+
+    }
 }
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"Encoding\">\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day01/Hello.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day01/HelloJava.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day02/BinaryTest.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day02/CharacterDemo.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day02/IdentifierTest.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day02/StringTest.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day02/VariableTest.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day02/VariableTest1.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day02/VariableTest1.java.bak\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day02/VariableTest2.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day02/VariableTest3.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day02/VariableTest4.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day03/AriExer.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day03/AriTest.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day03/BitTest.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day03/CompareTest.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day03/IfTest.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day03/LogicTest.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day03/ReviewTest.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day03/SanYuanTest.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day03/SetValueTest.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day04/ForTest.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day04/ForTest1.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day04/IfExer.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day04/IfExer1.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day04/IfTest.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day04/IfTest2.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day04/ScannerTest.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day04/SwitchCaseExer.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day04/SwitchCaseTest.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day04/SwitchCaseTest1.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day04/SwitchCaseTest2.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day05/ForForTest.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day05/ForTest.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day05/ForWhileTest.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day05/NineNineTable.java\" charset=\"GBK\" />\r\n    <file url=\"file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day05/WhileTest.java\" charset=\"GBK\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/encodings.xml b/.idea/encodings.xml
--- a/.idea/encodings.xml	(revision 84b49fea3e843afe85fec090768072255be9ec25)
+++ b/.idea/encodings.xml	(date 1661396709505)
@@ -1,6 +1,8 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="Encoding">
+    <file url="file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/Project01/FamilyAccount.java" charset="GBK" />
+    <file url="file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/Project01/Utility.java" charset="GBK" />
     <file url="file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day01/Hello.java" charset="GBK" />
     <file url="file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day01/HelloJava.java" charset="GBK" />
     <file url="file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day02/BinaryTest.java" charset="GBK" />
@@ -33,10 +35,15 @@
     <file url="file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day04/SwitchCaseTest.java" charset="GBK" />
     <file url="file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day04/SwitchCaseTest1.java" charset="GBK" />
     <file url="file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day04/SwitchCaseTest2.java" charset="GBK" />
+    <file url="file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day05/BreakContinueTest.java" charset="GBK" />
+    <file url="file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day05/DoWhileTest.java" charset="GBK" />
     <file url="file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day05/ForForTest.java" charset="GBK" />
     <file url="file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day05/ForTest.java" charset="GBK" />
     <file url="file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day05/ForWhileTest.java" charset="GBK" />
     <file url="file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day05/NineNineTable.java" charset="GBK" />
+    <file url="file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day05/PrimeNumberTest.java" charset="GBK" />
+    <file url="file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day05/PrimeNumberTest1.java" charset="GBK" />
+    <file url="file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day05/PrimeNumberTest2.java" charset="GBK" />
     <file url="file://$USER_HOME$/Desktop/课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day01-day05：EditPlus/day01-day05：EditPlus/day05/WhileTest.java" charset="GBK" />
   </component>
 </project>
\ No newline at end of file
Index: BDIC-Java-COMP2005J.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/BDIC-Java-COMP2005J.iml b/BDIC-Java-COMP2005J.iml
--- a/BDIC-Java-COMP2005J.iml	(revision 84b49fea3e843afe85fec090768072255be9ec25)
+++ b/BDIC-Java-COMP2005J.iml	(date 1661505793266)
@@ -7,5 +7,14 @@
     </content>
     <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="module-library">
+      <library>
+        <CLASSES>
+          <root url="jar://$MODULE_DIR$/lib/annotations-20.1.0.jar!/" />
+        </CLASSES>
+        <JAVADOC />
+        <SOURCES />
+      </library>
+    </orderEntry>
   </component>
 </module>
\ No newline at end of file
Index: src/Day05_Loop/BreakContinue.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Day05_Loop;public class BreakContinue {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day05_Loop/BreakContinue.java b/src/Day05_Loop/BreakContinue.java
--- a/src/Day05_Loop/BreakContinue.java	(revision 84b49fea3e843afe85fec090768072255be9ec25)
+++ b/src/Day05_Loop/BreakContinue.java	(date 1661396055905)
@@ -1,2 +1,49 @@
-package Day05_Loop;public class BreakContinue {
+package Day05_Loop;
+
+/*
+break和continue关键字的使用
+				使用范围			循环中使用的作用(不同点)		相同点
+break:			switch-case
+				循环结构中			结束当前循环					关键字后面不能声明执行语句
+
+continue:		循环结构中			结束当次循环					关键字后面不能声明执行语句
+
+
+
+*/
+class BreakContinue {
+    public static void main(String[] args) {
+
+        for(int i = 1;i <= 10;i++){
+
+            if(i % 4 == 0){
+                break;//123
+                //continue;//123567910
+                //System.out.println("今晚迪丽热巴要约我！！！");
+            }
+            System.out.print(i);
+        }
+
+        System.out.println("\n");
+        //******************************
+
+        label:for(int i = 1;i <= 4;i++){
+
+            for(int j = 1;j <= 10;j++){
+
+                if(j % 4 == 0){
+                    //break;//默认跳出包裹此关键字最近的一层循环。
+                    //continue;
+
+                    //break label;//结束指定标识的一层循环结构
+                    continue label;//结束指定标识的一层循环结构当次循环
+                }
+
+                System.out.print(j);
+            }
+
+            System.out.println();
+        }
+    }
 }
+
Index: src/Day06_Array/ArrayExcercise.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day06_Array/ArrayExcercise.java b/src/Day06_Array/ArrayExcercise.java
new file mode 100644
--- /dev/null	(date 1661422380761)
+++ b/src/Day06_Array/ArrayExcercise.java	(date 1661422380761)
@@ -0,0 +1,60 @@
+package Day06_Array;
+
+import java.util.Scanner;
+
+/*
+ * 2. 从键盘读入学生成绩，找出最高分，并输出学生成绩等级。
+		成绩>=最高分-10    等级为’A’
+		成绩>=最高分-20    等级为’B’
+		成绩>=最高分-30    等级为’C’
+		其余                               等级为’D’
+
+		提示：先读入学生人数，根据人数创建int数组，存放学生成绩。
+ */
+public class ArrayExcercise {
+    public static void main(String[] args) {
+        //1.使用Scanner，读取学生个数
+        Scanner scanner = new Scanner(System.in);
+        System.out.println("请输入学生人数：");
+        int number = scanner.nextInt();
+
+        //2.创建数组，存储学生成绩：动态初始化
+        int[] scores = new int[number];
+
+        //3.给数组中的元素赋值
+        System.out.println("请输入" + number + "个学生成绩：");
+        int maxScore = 0;
+        // 在输入成绩的时候解决成绩高低的排序问题
+        for(int i = 0 ; i < scores.length ; i++){
+            scores[i] = scanner.nextInt();
+            //4.获取数组中的元素的最大值:最高分
+            if(maxScore < scores[i]){
+                maxScore = scores[i];
+            }
+        }
+//		for(int i = 0;i < scores.length;i++){
+//			if(maxScore < scores[i]){
+//				maxScore = scores[i];
+//			}
+//		}
+
+        //5.根据每个学生成绩与最高分的差值，得到每个学生的等级，并输出等级和成绩
+        char level;
+        for(int i = 0 ; i < scores.length ; i++){
+            if(maxScore - scores[i] <= 10){
+                level = 'A';
+            }else if(maxScore - scores[i] <= 20){
+                level = 'B';
+            }else if(maxScore - scores[i] <= 30){
+                level = 'C';
+            }else{
+                level = 'D';
+            }
+
+            System.out.println("student " + i +
+                    " score is " + scores[i] + ",grade is " + level);
+        }
+
+    }
+}
+
Index: src/Day08_OOPIntro/Circle.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day08_OOPIntro/Circle.java b/src/Day08_OOPIntro/Circle.java
new file mode 100644
--- /dev/null	(date 1661487014254)
+++ b/src/Day08_OOPIntro/Circle.java	(date 1661487014254)
@@ -0,0 +1,20 @@
+package Day08_OOPIntro;
+
+public class Circle {
+    /*
+    double属性
+    表示圆的面积
+     */
+    double radius;
+
+    /**
+     * @author 16624
+     * @description 计算圆的面积
+     * @name public void findArea()
+     * @date 2022.8.26
+     */
+    public double findArea(){
+        double area = Math.PI * Math.pow(radius , 2);
+        return area;
+    }
+}
Index: src/Day08_OOPIntro/PrintRectangular.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day08_OOPIntro/PrintRectangular.java b/src/Day08_OOPIntro/PrintRectangular.java
new file mode 100644
--- /dev/null	(date 1661488373968)
+++ b/src/Day08_OOPIntro/PrintRectangular.java	(date 1661488373968)
@@ -0,0 +1,27 @@
+package Day08_OOPIntro;
+
+/*
+ * 3.1 编写程序，声明一个method方法，在方法中打印一个10*8 的*型矩形，在main方法中调用该方法。
+ * 3.2 修改上一个程序，在method方法中，除打印一个10*8的*型矩形外，再计算该矩形的面积，
+ * 并将其作为方法返回值。在main方法中调用该方法，接收返回的面积值并打印。
+ *
+ * 3.3 修改上一个程序，在method方法提供m和n两个参数，方法中打印一个m*n的*型矩形，
+ * 并计算该矩形的面积， 将其作为方法返回值。在main方法中调用该方法，接收返回的面积值并打印。
+ */
+
+import Day08_OOPIntro.Rectangular;
+
+import java.util.Scanner;
+
+public class PrintRectangular {
+    public static void main (String[] args){
+        Scanner scan = new Scanner(System.in);
+        Rectangular m1 = new Rectangular();
+        System.out.println("Please typein the lenghth and the hight, thanks!");
+        m1.m = scan.nextInt();
+        m1.n = scan.nextInt();
+        int area = m1.print(m1.m, m1.n);
+        System.out.println("The area is: " + area);
+
+    }
+}
Index: src/Day08_OOPIntro/Rectangular.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day08_OOPIntro/Rectangular.java b/src/Day08_OOPIntro/Rectangular.java
new file mode 100644
--- /dev/null	(date 1661488070986)
+++ b/src/Day08_OOPIntro/Rectangular.java	(date 1661488070986)
@@ -0,0 +1,15 @@
+package Day08_OOPIntro;
+
+public class Rectangular {
+    int m;
+    int n;
+    public int print(int m , int n){
+        for(int i = 0 ; i < m ; i ++){
+            for(int j = 0 ; j < n ; j++){
+                System.out.print("* ");
+            }
+            System.out.println();
+        }
+        return m * n;
+    }
+}
Index: src/Day07_1_ArrayImprove/ArrayPlus_01.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day07_1_ArrayImprove/ArrayPlus_01.java b/src/Day07_1_ArrayImprove/ArrayPlus_01.java
new file mode 100644
--- /dev/null	(date 1661425425538)
+++ b/src/Day07_1_ArrayImprove/ArrayPlus_01.java	(date 1661425425538)
@@ -0,0 +1,41 @@
+package Day07_1_ArrayImprove;
+
+/*
+ * @pack java.util.Arrays
+ * @usage 操作数组的工具类，里面定义了很多操作数组的方法
+ */
+import java.util.Arrays;
+
+public class ArrayPlus_01 {
+    public static void main(String[] args) {
+
+        //1.boolean equals(int[] a,int[] b):判断两个数组是否相等。
+        int[] arr1 = new int[]{1,2,3,4};
+        int[] arr2 = new int[]{1,3,2,4};
+        boolean isEquals = Arrays.equals(arr1, arr2);
+        System.out.println(isEquals);
+
+        //2.String toString(int[] a):输出数组信息。
+        System.out.println(Arrays.toString(arr1));
+
+        //3.void fill(int[] a,int val):将指定值填充到数组之中。
+        Arrays.fill(arr1,10);
+        System.out.println(Arrays.toString(arr1));
+
+
+        //4.void sort(int[] a):对数组进行排序。
+        Arrays.sort(arr2);
+        System.out.println(Arrays.toString(arr2));
+
+        //5.int binarySearch(int[] a,int key)
+        //return的值从零开始
+        int[] arr3 = new int[]{-98,-34,2,34,54,66,79,105,210,333};
+        int index = Arrays.binarySearch(arr3, 210);
+        if(index >= 0){
+            System.out.println(index);
+        }else{
+            System.out.println("未找到");
+        }
+
+    }
+}
Index: src/Day07_1_ArrayImprove/ArrayPlus_02.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day07_1_ArrayImprove/ArrayPlus_02.java b/src/Day07_1_ArrayImprove/ArrayPlus_02.java
new file mode 100644
--- /dev/null	(date 1661425425551)
+++ b/src/Day07_1_ArrayImprove/ArrayPlus_02.java	(date 1661425425551)
@@ -0,0 +1,58 @@
+package Day07_1_ArrayImprove;
+
+/*
+ * 算法的考查：求数值型数组中元素的最大值、最小值、平均数、总和等
+ *
+ * 定义一个int型的一维数组，包含10个元素，分别赋一些随机整数，
+ * 然后求出所有元素的最大值，最小值，和值，平均值，并输出出来。
+ * 要求：所有随机数都是两位数。
+ *
+ * [10,99]
+ * 公式：(int)(Math.random() * (99 - 10 + 1) + 10)
+ *
+ */
+
+public class ArrayPlus_02 {
+    public static void main(String[] args) {
+        int[] arr = new int[10];
+
+        for(int i = 0;i < arr.length;i++){
+            arr[i] = (int)(Math.random() * (99 - 10 + 1) + 10);
+        }
+
+        //遍历
+        for(int i = 0;i < arr.length;i++){
+            System.out.print(arr[i] + "\t");
+        }
+        System.out.println();
+
+        //求数组元素的最大值
+        int maxValue = arr[0];
+        for(int i = 1;i < arr.length;i++){
+            if(maxValue < arr[i]){
+                maxValue = arr[i];
+            }
+        }
+        System.out.println("最大值为：" + maxValue);
+
+        //求数组元素的最小值
+        int minValue = arr[0];
+        for(int i = 1;i < arr.length;i++){
+            if(minValue > arr[i]){
+                minValue = arr[i];
+            }
+        }
+        System.out.println("最小值为：" + minValue);
+
+        //求数组元素的总和
+        int sum = 0;
+        for(int i = 0;i < arr.length;i++){
+            sum += arr[i];
+        }
+        System.out.println("总和为：" + sum);
+
+        //求数组元素的平均数
+        int avgValue = sum / arr.length;
+        System.out.println("平均数为：" + avgValue);
+    }
+}
Index: src/Day08_OOPIntro/StudentList.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day08_OOPIntro/StudentList.java b/src/Day08_OOPIntro/StudentList.java
new file mode 100644
--- /dev/null	(date 1661495212164)
+++ b/src/Day08_OOPIntro/StudentList.java	(date 1661495212164)
@@ -0,0 +1,57 @@
+package Day08_OOPIntro;
+
+/*
+ * 4. 对象数组题目：
+定义类Student，包含三个属性：学号number(int)，年级state(int)，成绩score(int)。
+ 创建20个学生对象，学号为1到20，年级和成绩都由随机数确定。
+问题一：打印出3年级(state值为3）的学生信息。
+问题二：使用冒泡排序按学生成绩排序，并遍历所有学生信息
+
+提示：
+1) 生成随机数：Math.random()，返回值类型double;
+2) 四舍五入取整：Math.round(double d)，返回值类型long。
+ *
+ *
+ * 此代码是对StudentTest.java的改进：将操作数组的功能封装到方法中。
+ *
+ */
+
+import Day08_OOPIntro.Student;
+
+public class StudentList {
+    public static void main (String[] args){
+
+        //声明Student类型的数组
+        Student[] stus = new Student[20];
+        //虽然数组已经声明了，但是变量的属性还没有绑定
+        //这个时候需要来一个循环进行“赋值”操作
+        for(int i = 0 ; i < stus.length ; i++){
+            //给数组元素给与“赋值”
+            stus[i] = new Student();
+            //这样之后，每一个stus[i]都有了Student类的属性
+
+            //给Student对象进行赋值
+            //学号
+            stus[i].number = i + 1;
+            //年级：1-6
+            stus[i].grade = (int)(Math.random() * (6 - 1 + 1) + 1);
+            //成绩：0-100
+            stus[i].score = (int)(Math.random() * (100 - 0 + 1));
+
+        }
+
+        //调用manageFunction类的方法
+        manageFunction fun = new manageFunction();
+        //
+        fun.printInfo(stus);
+        System.out.println("****************");
+
+        fun.searchGrade(stus , 3);
+        System.out.println("****************");
+
+        fun.sortScore(stus);
+        fun.printInfo(stus);
+
+
+    }
+}
Index: src/Day07_1_ArrayImprove/ArrayException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day07_1_ArrayImprove/ArrayException.java b/src/Day07_1_ArrayImprove/ArrayException.java
new file mode 100644
--- /dev/null	(date 1661425425524)
+++ b/src/Day07_1_ArrayImprove/ArrayException.java	(date 1661425425524)
@@ -0,0 +1,41 @@
+package Day07_1_ArrayImprove;
+
+/*
+ * 数组中的常见异常：
+ * 1. 数组角标越界的异常：ArrayIndexOutOfBoundsExcetion
+ *
+ * 2. 空指针异常：NullPointerException
+ *
+ */
+
+public class ArrayException {
+    public static void main(String[] args) {
+
+        //1. 数组角标越界的异常：ArrayIndexOutOfBoundsExcetion
+        int[] arr = new int[]{1,2,3,4,5};
+
+//		for(int i = 0;i <= arr.length;i++){
+//			System.out.println(arr[i]);
+//		}
+
+//		System.out.println(arr[-2]);
+
+//		System.out.println("hello");
+
+        //2.2. 空指针异常：NullPointerException
+        //情况一：
+//		int[] arr1 = new int[]{1,2,3};
+//		arr1 = null;
+//		System.out.println(arr1[0]);
+
+        //情况二：
+//		int[][] arr2 = new int[4][];
+//		System.out.println(arr2[0][0]);
+
+        //情况三：
+        String[] arr3 = new String[]{"AA","BB","CC"};
+        arr3[0] = null; // 注释掉即可正常运行
+        System.out.println(arr3[0].toString());
+    }
+}
+
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e60344a5-07ed-4299-ae9b-b52e2dcaed14\" name=\"变更\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/.gitignore\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/encodings.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/modules.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/uiDesigner.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/BDIC-Java-COMP2005J.iml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day01_HelloWorld/Hello.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day01_HelloWorld/HelloJava.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day01_HelloWorld/practice1.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day02_1_Valuable/VariableTest01_BasicIntroduction.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day02_1_Valuable/VariableTest02_Type.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day02_1_Valuable/VariableTest03_AutoConversion.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day02_1_Valuable/VariableTest04_CoercionConversion.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day02_1_Valuable/VariableTest05_BasicWrong.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day02_2_String/StringTest.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day02_3_BinaryAndCharacter/BinaryTest.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day02_3_BinaryAndCharacter/NameRule.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day03_OperatorCalculation/Operator_01_1_Calculation.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day03_OperatorCalculation/Operator_01_2_TheHundredsNumber.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day03_OperatorCalculation/Operator_02_SetValueTest.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day03_OperatorCalculation/Operator_03_Comparing.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day03_OperatorCalculation/Operator_04_LogicCalculation.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day03_OperatorCalculation/Operator_05_BiteOperation.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day03_OperatorCalculation/Operator_06_SanYuanOperator.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day03_OperatorCalculation/Operator_07_IfElse.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day03_OperatorCalculation/ReviewVariable.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day04_LogicSentence/For/For_01.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day04_LogicSentence/For/For_02.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day04_LogicSentence/If/IfExcercise_01.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day04_LogicSentence/If/IfExcercise_02.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day04_LogicSentence/If/IfTesting_01.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day04_LogicSentence/If/IfTesting_02.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day04_LogicSentence/ScannerUsing.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day04_LogicSentence/Switch/SwitchExcercise.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day04_LogicSentence/Switch/SwitchTesting_01.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day04_LogicSentence/Switch/SwitchTesting_02.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day04_LogicSentence/Switch/SwitchTesting_03.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day04_LogicSentence/TestMain.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day05_Loop/ForLoop_01.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day05_Loop/ForLoop_02.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day05_Loop/ForLoop_03.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Day05_Loop/Loop_GCDandLCM.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Testing_Main.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2DnH4qlKUzDcF45gw0HLqQJeQYH\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"autoscrollFromSource\" value=\"false\" />\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\" selected=\"应用程序.Loop_GCDandLCM\">\r\n    <configuration name=\"ForLoop_02\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Day05_Loop.ForLoop_02\" />\r\n      <module name=\"BDIC-Java-COMP2005J\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"Day05_Loop.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ForWhileTest\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"ForWhileTest\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"IfTest2\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"IfTest2\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Loop_GCDandLCM\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Day05_Loop.Loop_GCDandLCM\" />\r\n      <module name=\"BDIC-Java-COMP2005J\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"Day05_Loop.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ScannerTest\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Day04_LogicSentence.ScannerTest\" />\r\n      <module name=\"BDIC-Java-COMP2005J\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"Day04_LogicSentence.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"应用程序.Loop_GCDandLCM\" />\r\n        <item itemvalue=\"应用程序.ForLoop_02\" />\r\n        <item itemvalue=\"应用程序.ForWhileTest\" />\r\n        <item itemvalue=\"应用程序.ScannerTest\" />\r\n        <item itemvalue=\"应用程序.IfTest2\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"应用程序级\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"默认任务\">\r\n      <changelist id=\"e60344a5-07ed-4299-ae9b-b52e2dcaed14\" name=\"变更\" comment=\"\" />\r\n      <created>1661327743665</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1661327743665</updated>\r\n      <workItem from=\"1661327750050\" duration=\"1125000\" />\r\n      <workItem from=\"1661328897464\" duration=\"1015000\" />\r\n      <workItem from=\"1661331291037\" duration=\"768000\" />\r\n      <workItem from=\"1661337936956\" duration=\"1159000\" />\r\n      <workItem from=\"1661339119540\" duration=\"2496000\" />\r\n      <workItem from=\"1661341653284\" duration=\"1073000\" />\r\n      <workItem from=\"1661342898837\" duration=\"1175000\" />\r\n      <workItem from=\"1661344430965\" duration=\"1299000\" />\r\n      <workItem from=\"1661351469966\" duration=\"727000\" />\r\n      <workItem from=\"1661392974923\" duration=\"2152000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 84b49fea3e843afe85fec090768072255be9ec25)
+++ b/.idea/workspace.xml	(date 1661657953327)
@@ -1,55 +1,55 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="AnalysisUIOptions">
+    <option name="SCOPE_TYPE" value="8" />
+    <option name="CUSTOM_SCOPE_NAME" value="所有位置" />
+  </component>
   <component name="AutoImportSettings">
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="e60344a5-07ed-4299-ae9b-b52e2dcaed14" name="变更" comment="">
-      <change afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/uiDesigner.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/BDIC-Java-COMP2005J.iml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day01_HelloWorld/Hello.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day01_HelloWorld/HelloJava.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day01_HelloWorld/practice1.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day02_1_Valuable/VariableTest01_BasicIntroduction.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day02_1_Valuable/VariableTest02_Type.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day02_1_Valuable/VariableTest03_AutoConversion.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day02_1_Valuable/VariableTest04_CoercionConversion.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day02_1_Valuable/VariableTest05_BasicWrong.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day02_2_String/StringTest.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day02_3_BinaryAndCharacter/BinaryTest.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day02_3_BinaryAndCharacter/NameRule.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day03_OperatorCalculation/Operator_01_1_Calculation.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day03_OperatorCalculation/Operator_01_2_TheHundredsNumber.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day03_OperatorCalculation/Operator_02_SetValueTest.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day03_OperatorCalculation/Operator_03_Comparing.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day03_OperatorCalculation/Operator_04_LogicCalculation.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day03_OperatorCalculation/Operator_05_BiteOperation.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day03_OperatorCalculation/Operator_06_SanYuanOperator.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day03_OperatorCalculation/Operator_07_IfElse.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day03_OperatorCalculation/ReviewVariable.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day04_LogicSentence/For/For_01.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day04_LogicSentence/For/For_02.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day04_LogicSentence/If/IfExcercise_01.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day04_LogicSentence/If/IfExcercise_02.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day04_LogicSentence/If/IfTesting_01.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day04_LogicSentence/If/IfTesting_02.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day04_LogicSentence/ScannerUsing.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day04_LogicSentence/Switch/SwitchExcercise.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day04_LogicSentence/Switch/SwitchTesting_01.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day04_LogicSentence/Switch/SwitchTesting_02.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day04_LogicSentence/Switch/SwitchTesting_03.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day04_LogicSentence/TestMain.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day05_Loop/ForLoop_01.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day05_Loop/ForLoop_02.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day05_Loop/ForLoop_03.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Day05_Loop/Loop_GCDandLCM.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Testing_Main.java" afterDir="false" />
+    <list default="true" id="e60344a5-07ed-4299-ae9b-b52e2dcaed14" name="变更" comment="Java-COMP2005J">
+      <change afterPath="$PROJECT_DIR$/lib/annotations-20.1.0-javadoc.jar" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lib/annotations-20.1.0-sources.jar" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lib/annotations-20.1.0.jar" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day05_Project01_FamilyAccount/FamilyAccount.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day05_Project01_FamilyAccount/Utility.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day06_Array/ArrayDefinition_InitializeAndMenmory.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day06_Array/ArrayDefinition_NewArray.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day06_Array/ArrayExcercise.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day06_Array/TwoDimensionalArray_01.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day06_Array/TwoDimensionalArray_02.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day07_1_ArrayImprove/ArrayException.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day07_1_ArrayImprove/ArrayExer_01.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day07_1_ArrayImprove/ArrayExer_02.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day07_1_ArrayImprove/ArrayExer_03.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day07_1_ArrayImprove/ArrayPlus_01.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day07_1_ArrayImprove/ArrayPlus_02.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day07_1_ArrayImprove/ArrayPlus_03.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day07_2_Array_SortAlgorithm/BubbleSort.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day07_2_Array_SortAlgorithm/QuickSort.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day07_2_Array_SortAlgorithm/YangHuiTriangle.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day08_OOPIntro/Circle.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day08_OOPIntro/CircleArea.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day08_OOPIntro/ClassIntro.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day08_OOPIntro/GirlFriendIntro.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day08_OOPIntro/OOPIntro.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day08_OOPIntro/PersonExer.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day08_OOPIntro/PersonUniltil.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day08_OOPIntro/PrintRectangular.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day08_OOPIntro/Rectangular.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day08_OOPIntro/Student.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day08_OOPIntro/StudentList.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day09_OOPFunctionAndParm/AnonymousObject.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day09_OOPFunctionAndParm/ArrayUtil.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Day09_OOPFunctionAndParm/ArrayUtilTesting.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/encodings.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/BDIC-Java-COMP2005J.iml" beforeDir="false" afterPath="$PROJECT_DIR$/BDIC-Java-COMP2005J.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Day05_Loop/BreakContinue.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Day05_Loop/BreakContinue.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Day05_Loop/DoWhileLoop.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Day05_Loop/DoWhileLoop.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Day05_Loop/PrimeNumber_02.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Day05_Loop/PrimeNumber_02.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Day05_Loop/PrimeNumber_03.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Day05_Loop/PrimeNumber_03.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -63,35 +63,49 @@
       </list>
     </option>
   </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="HighlightingSettingsPerFile">
+    <setting file="file://$PROJECT_DIR$/src/Day08_OOPIntro/ClassIntro.java" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/src/Day08_OOPIntro/GirlFriendIntro.java" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/src/Day08_OOPIntro/OOPIntro.txt" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/../课件笔记源码资料/新建文件夹/4_代码/第1部分：Java基础编程/day06-day18：Eclipse/day06-day18：Eclipse/workspace0105/day08/src/com/atguigu/java/UserTest.java" root0="FORCE_HIGHLIGHTING" />
+  </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
   </component>
   <component name="ProjectId" id="2DnH4qlKUzDcF45gw0HLqQJeQYH" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
   <component name="ProjectViewState">
-    <option name="autoscrollFromSource" value="false" />
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
   <component name="PropertiesComponent">{
   &quot;keyToString&quot;: {
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;true&quot;,
+    &quot;Repository.Attach.Annotations&quot;: &quot;true&quot;,
+    &quot;Repository.Attach.JavaDocs&quot;: &quot;true&quot;,
+    &quot;Repository.Attach.Sources&quot;: &quot;true&quot;,
     &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
     &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
     &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
     &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;库&quot;,
+    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
+    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
+    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
   }
 }</component>
-  <component name="RunManager" selected="应用程序.Loop_GCDandLCM">
-    <configuration name="ForLoop_02" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="Day05_Loop.ForLoop_02" />
+  <component name="RunManager" selected="应用程序.ArrayUtilTesting">
+    <configuration name="ArrayUtilTesting" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="Day09_OOPFunctionAndParm.ArrayUtilTesting" />
       <module name="BDIC-Java-COMP2005J" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="Day05_Loop.*" />
+          <option name="PATTERN" value="Day09_OOPFunctionAndParm.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
@@ -99,24 +113,38 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="ForWhileTest" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="ForWhileTest" />
+    <configuration name="CircleArea" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="Day08_OOPIntro.CircleArea" />
+      <module name="BDIC-Java-COMP2005J" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="Day08_OOPIntro.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="IfTest2" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="IfTest2" />
+    <configuration name="PersonExer" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="Day08_OOPIntro.PersonExer" />
+      <module name="BDIC-Java-COMP2005J" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="Day08_OOPIntro.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="Loop_GCDandLCM" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="Day05_Loop.Loop_GCDandLCM" />
+    <configuration name="PrintRectangular" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="Day08_OOPIntro.PrintRectangular" />
       <module name="BDIC-Java-COMP2005J" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="Day05_Loop.*" />
+          <option name="PATTERN" value="Day08_OOPIntro.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
@@ -124,12 +152,12 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="ScannerTest" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="Day04_LogicSentence.ScannerTest" />
+    <configuration name="StudentList" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="Day08_OOPIntro.StudentList" />
       <module name="BDIC-Java-COMP2005J" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="Day04_LogicSentence.*" />
+          <option name="PATTERN" value="Day08_OOPIntro.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
@@ -139,11 +167,11 @@
     </configuration>
     <recent_temporary>
       <list>
-        <item itemvalue="应用程序.Loop_GCDandLCM" />
-        <item itemvalue="应用程序.ForLoop_02" />
-        <item itemvalue="应用程序.ForWhileTest" />
-        <item itemvalue="应用程序.ScannerTest" />
-        <item itemvalue="应用程序.IfTest2" />
+        <item itemvalue="应用程序.ArrayUtilTesting" />
+        <item itemvalue="应用程序.StudentList" />
+        <item itemvalue="应用程序.PrintRectangular" />
+        <item itemvalue="应用程序.CircleArea" />
+        <item itemvalue="应用程序.PersonExer" />
       </list>
     </recent_temporary>
   </component>
@@ -164,7 +192,17 @@
       <workItem from="1661342898837" duration="1175000" />
       <workItem from="1661344430965" duration="1299000" />
       <workItem from="1661351469966" duration="727000" />
-      <workItem from="1661392974923" duration="2152000" />
+      <workItem from="1661392974923" duration="4628000" />
+      <workItem from="1661400848986" duration="6775000" />
+      <workItem from="1661414766373" duration="43000" />
+      <workItem from="1661414837437" duration="189000" />
+      <workItem from="1661421293663" duration="4511000" />
+      <workItem from="1661431199819" duration="1800000" />
+      <workItem from="1661476154013" duration="182000" />
+      <workItem from="1661476350650" duration="1475000" />
+      <workItem from="1661485120511" duration="7441000" />
+      <workItem from="1661504567616" duration="6033000" />
+      <workItem from="1661656827955" duration="1116000" />
     </task>
     <servers />
   </component>
@@ -182,4 +220,12 @@
       </map>
     </option>
   </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="Java-COMP2005J" />
+    <option name="LAST_COMMIT_MESSAGE" value="Java-COMP2005J" />
+  </component>
+  <component name="XSLT-Support.FileAssociations.UIState">
+    <expand />
+    <select />
+  </component>
 </project>
\ No newline at end of file
Index: src/Day05_Project01_FamilyAccount/FamilyAccount.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day05_Project01_FamilyAccount/FamilyAccount.java b/src/Day05_Project01_FamilyAccount/FamilyAccount.java
new file mode 100644
--- /dev/null	(date 1661421878194)
+++ b/src/Day05_Project01_FamilyAccount/FamilyAccount.java	(date 1661421878194)
@@ -0,0 +1,104 @@
+package Day05_Project01_FamilyAccount;
+
+
+class FamilyAccount{
+
+    public static void main(String[] args){
+
+        boolean isFlag = true;
+
+        //用于记录用户的收入和支出的详情(主菜单显示1)
+        //用String details去记录用户的使用数据
+        String details = "收支\t账户金额\t收支金额\t说    明\n";
+
+        //初始金额
+        int balance = 1000;
+
+        while(isFlag){
+
+            System.out.println("-----------------家庭收支记账软件-----------------\n");
+            System.out.println("                   1 收支明细");
+            System.out.println("                   2 登记收入");
+            System.out.println("                   3 登记支出");
+            System.out.println("                   4 退    出\n");
+            System.out.println("                   请选择(1-4)：");
+
+
+            /**
+             * @function Utility.readMenuSelection()
+             * @return char
+             * @usage read mean number user typing
+             */
+            char selection = Utility.readMenuSelection();
+
+            //获取用户的选择：1-4
+            switch (selection) {
+
+                //1.收支明细
+                case '1' -> {
+                    //System.out.println("1.收支明细");
+                    System.out.println("-----------------当前收支明细记录-----------------");
+                    System.out.println(details);
+                    System.out.println("-------------------------------------------------");
+                }
+
+                //2，登记收入
+                case '2' -> {
+                    //System.out.println("2.登记收入");
+                    System.out.print("本次收入金额：");
+                    int addMoney = Utility.readNumber();
+                    System.out.print("本次收入说明：");
+                    String addInfo = Utility.readString();
+
+                    //处理balance
+                    balance += addMoney;
+
+                    //处理details
+                    details += ("收入\t" + balance + "\t" + addMoney + "\t" + addInfo + "\n");
+                    System.out.println("---------------------登记完成---------------------\n");
+                }
+                case '3' -> {
+                    //System.out.println("3.登记支出");
+
+                    System.out.print("本次支出金额：");
+                    int minusMoney = Utility.readNumber();
+                    System.out.print("本次支出说明：");
+                    String minusInfo = Utility.readString();
+
+                    //处理balance
+                    if (balance >= minusMoney) {
+                        balance -= minusMoney;
+
+                        //处理details
+                        details += ("支出\t" + balance + "\t" + minusMoney + "\t\t" + minusInfo + "\n");
+                    } else {
+                        System.out.println("支出超出账户额度，支付失败");
+                    }
+                    System.out.println("---------------------登记完成---------------------\n");
+                }
+                case '4' -> {
+                    //System.out.println("4.退  出");
+                    System.out.print("确认是否退出(Y/N)：");
+
+                    /**
+                     * @function Utility.readConfirmSelection()
+                     * @return char (big letter Y && N)
+                     * @usage read user's exit command
+                     */
+                    char isExit = Utility.readConfirmSelection();
+                    if (isExit == 'Y') {
+                        isFlag = false;
+                    }
+                }
+
+                //当使用4进行推出的时候，无需这里的break结束循环
+                //break;
+            }
+
+
+
+        }
+
+    }
+
+}
Index: src/Day08_OOPIntro/PersonUniltil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day08_OOPIntro/PersonUniltil.java b/src/Day08_OOPIntro/PersonUniltil.java
new file mode 100644
--- /dev/null	(date 1661485648617)
+++ b/src/Day08_OOPIntro/PersonUniltil.java	(date 1661485648617)
@@ -0,0 +1,25 @@
+package Day08_OOPIntro;
+
+public class PersonUniltil {
+
+    String name;
+    int age;
+    /**
+     * sex:1 表明是男性
+     * sex:0 表明是女性
+     */
+    int sex;
+
+    public void study(){
+        System.out.println("studying");
+    }
+
+    public void showAge(){
+        System.out.println("age:" + age);
+    }
+
+    public int addAge(int i){
+        age += i;
+        return age;
+    }
+}
Index: src/Day05_Project01_FamilyAccount/Utility.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day05_Project01_FamilyAccount/Utility.java b/src/Day05_Project01_FamilyAccount/Utility.java
new file mode 100644
--- /dev/null	(date 1661402423703)
+++ b/src/Day05_Project01_FamilyAccount/Utility.java	(date 1661402423703)
@@ -0,0 +1,106 @@
+package Day05_Project01_FamilyAccount;
+
+import java.util.Scanner;
+
+/**
+ Utility工具类：
+ 将不同的功能封装为方法，就是可以直接通过调用方法使用它的功能，而无需考虑具体的功能实现细节。
+ */
+public class Utility {
+    private static Scanner scanner = new Scanner(System.in);
+
+    /**
+     用于界面菜单的选择。该方法读取键盘，如果用户键入’1’-’4’中的任意字符，则方法返回。返回值为用户键入字符。
+     */
+    public static char readMenuSelection() {
+        char c;
+        for (; ; ) {
+            String str = readKeyBoard(1);
+            c = str.charAt(0);
+            if (c != '1' && c != '2' && c != '3' && c != '4') {
+                System.out.print("选择错误，请重新输入：");
+            } else break;
+        }
+        return c;
+    }
+
+    /**
+     用于收入和支出金额的输入。该方法从键盘读取一个不超过4位长度的整数，并将其作为方法的返回值。
+     */
+    public static int readNumber() {
+        int n;
+        for (; ; ) {
+            String str = readKeyBoard(4);
+            /**
+             * @function Integer.parseInt(str)
+             * @usage 将整型数据Integer转换为基本数据类型int
+             * @effection
+             * int i = Integer.parseInt(str);
+             * System.out.println(i+1)；//输出4;
+             * String str = ＂3＂;
+             * System.out.println(str+1);//output 31;
+             */
+            try {
+                n = Integer.parseInt(str);
+                break;
+            } catch (NumberFormatException e) {
+                /**NumberFormatException
+                 *数字格式异常。当试图将一个String转换为指定的数字类型
+                 *而该字符串确不满足数字类型要求的格式时，抛出该异常.
+                 */
+                 System.out.print("数字输入错误，请重新输入：");
+            }
+        }
+        return n;
+    }
+
+    /**
+     用于收入和支出说明的输入。该方法从键盘读取一个不超过8位长度的字符串，并将其作为方法的返回值。
+     */
+    public static String readString() {
+        String str = readKeyBoard(8);
+        return str;
+    }
+
+    /**
+     用于确认选择的输入。该方法从键盘读取‘Y’或’N’，并将其作为方法的返回值。
+     */
+    public static char readConfirmSelection() {
+        char c;
+        for (; ; ) {
+            /**
+             * @function toUpperCase
+             * @effection 返回一个新的字符串，其中的文本全部为大写。
+             */
+            String str = readKeyBoard(1).toUpperCase();
+            c = str.charAt(0);
+            if (c == 'Y' || c == 'N') {
+                break;
+            } else {
+                System.out.print("选择错误，请重新输入：");
+            }
+        }
+        return c;
+    }
+
+    /**
+     * @param limit 限制传输的字符总量
+     * @return String line
+     * @introduction: 检查输入的字符串满不满足对于长度的检查要求
+     */
+    private static String readKeyBoard(int limit) {
+        String line = "";
+
+        while (scanner.hasNext()) {
+            line = scanner.nextLine();
+            if (line.length() < 1 || line.length() > limit) {
+                System.out.print("输入长度（不大于" + limit + "）错误，请重新输入：");
+                continue;
+            }
+            break;
+        }
+
+        return line;
+    }
+}
+
Index: src/Day08_OOPIntro/CircleArea.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day08_OOPIntro/CircleArea.java b/src/Day08_OOPIntro/CircleArea.java
new file mode 100644
--- /dev/null	(date 1661487043417)
+++ b/src/Day08_OOPIntro/CircleArea.java	(date 1661487043417)
@@ -0,0 +1,20 @@
+package Day08_OOPIntro;
+
+/*
+ * 2.利用面向对象的编程方法，设计类Circle计算圆的面积。
+ */
+//测试类
+
+import Day08_OOPIntro.Circle;
+import java.util.Scanner;
+
+public class CircleArea {
+    public static void main (String[] args){
+        Circle ci = new Circle();
+        System.out.println("请输入圆的半径：");
+        Scanner scan = new Scanner(System.in);
+        ci.radius = scan.nextDouble();
+        double area = ci.findArea();
+        System.out.println("圆的面积为：" + area);
+    }
+}
Index: src/Day07_1_ArrayImprove/ArrayExer_01.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day07_1_ArrayImprove/ArrayExer_01.java b/src/Day07_1_ArrayImprove/ArrayExer_01.java
new file mode 100644
--- /dev/null	(date 1661425425531)
+++ b/src/Day07_1_ArrayImprove/ArrayExer_01.java	(date 1661425425531)
@@ -0,0 +1,16 @@
+package Day07_1_ArrayImprove;
+
+public class ArrayExer_01 {
+    public static void main(String[] args) {
+        int[][] arr = new int[][]{{3,5,8},{12,9},{7,0,6,4}};
+
+        int sum = 0;//记录总和
+        for(int i = 0;i < arr.length;i++){
+            for(int j = 0;j < arr[i].length;j++){
+                sum += arr[i][j];
+            }
+        }
+
+        System.out.println("总和为：" + sum);
+    }
+}
Index: src/Day07_1_ArrayImprove/ArrayExer_02.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day07_1_ArrayImprove/ArrayExer_02.java b/src/Day07_1_ArrayImprove/ArrayExer_02.java
new file mode 100644
--- /dev/null	(date 1661425728732)
+++ b/src/Day07_1_ArrayImprove/ArrayExer_02.java	(date 1661425728732)
@@ -0,0 +1,42 @@
+package Day07_1_ArrayImprove;
+
+/*
+ * 使用简单数组
+   (1)创建一个名为ArrayExer2的类，在main()方法中声明array1和array2两个变量，他们是int[]类型的数组。
+   (2)使用大括号{}，把array1初始化为8个素数：2,3,5,7,11,13,17,19。
+   (3)显示array1的内容。
+   (4)赋值array2变量等于array1，修改array2中的偶索引元素，使其等于索引值(如array[0]=0,array[2]=2)。打印出array1。
+ *
+ * 思考：array1和array2是什么关系？array1和array2地址值相同，都指向了堆空间的唯一的一个数组实体。
+ * 拓展：修改题目，实现array2对array1数组的复制
+ */
+
+public class ArrayExer_02 {
+    public static void main(String[] args) {  //alt + /
+        int[] array1,array2;
+
+        array1 = new int[]{2,3,5,7,11,13,17,19};
+
+        //显示array1的内容
+        for(int i = 0;i < array1.length;i++){
+            System.out.print(array1[i] + "\t");
+        }
+
+        //赋值array2变量等于array1
+        //不能称作数组的复制。(索引)
+        array2 = array1;
+
+        //修改array2中的偶索引元素，使其等于索引值(如array[0]=0,array[2]=2)
+        for(int i = 0;i < array2.length;i++){
+            if(i % 2 == 0){
+                array2[i] = i;
+            }
+
+        }
+        System.out.println();
+        //打印出array1
+        for(int i = 0;i < array1.length;i++){
+            System.out.print(array1[i] + "\t");
+        }
+    }
+}
Index: src/Day08_OOPIntro/Student.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day08_OOPIntro/Student.java b/src/Day08_OOPIntro/Student.java
new file mode 100644
--- /dev/null	(date 1661506062777)
+++ b/src/Day08_OOPIntro/Student.java	(date 1661506062777)
@@ -0,0 +1,93 @@
+package Day08_OOPIntro;
+
+import jdk.jfr.Description;
+import org.jetbrains.annotations.NotNull;
+
+/**
+ * @Description 学生类的基本属性
+ * @author crition
+ * @date 2022.8.26
+ * @parm int number
+ * @parm int grade
+ * @parm int score
+ * @parm public String infoTogether()
+ */
+class Student {
+    // 学号
+    int number;
+    // 年纪
+    int grade;
+    // 成绩
+    int score;
+
+    /**
+     * @Description 集中用户信息
+     * @author crition
+     * @date 2022.8.26
+     * @return String info of student
+     */
+    public String infoTogether(){
+        return "学号:" + number + " 年级:" + grade + " 成绩:" + score;
+    }
+}
+
+/**
+ * @Description 管理学生的函数方法
+ * @author crition
+ * @date 2022.8.26
+ * @parm public void printInfo(Student[] stus)
+ * @parm public void searchGrade(Student[] stus , int grade)
+ * @parm public void sortScore(Student[] stus)
+ */
+class manageFunction{
+
+    /**
+     * @Description 遍历并打印学生信息
+     * @author crition
+     * @date 2022.8.26
+     * @param stus
+     * @return null
+     */
+    public void printInfo(Student[] stus){
+        for(int i = 0 ; i < stus.length ; i++){
+            System.out.println(stus[i].infoTogether());
+        }
+    }
+
+    /**
+     * @Description 查找Student数组中指定年级的学生信息并打印
+     * @author crition
+     * @date 2022.8.26
+     * @param stus
+     * @param grade
+     * @return null
+     */
+    public void searchGrade(Student @NotNull [] stus , int grade){
+        for(int i = 0 ; i < stus.length ; i++){
+            if(stus[i].grade == grade){
+                System.out.println(stus[i].infoTogether());
+            }
+        }
+    }
+
+    /**
+     * @Description 以学生的成绩作为标准进行排序操作
+     * @author crition
+     * @date 2022.8.26
+     * @param stus
+     * @return null
+     */
+    public void sortScore(Student[] stus){
+        for(int i = 0 ; i < stus.length ; i++){
+            for(int j = 0 ; j < stus.length - 1; j++){
+                if(stus[j].score > stus[j + 1].score){
+                    Student temp = new Student();
+                    temp = stus[j];
+                    //结合在一起：Student temp = stus[j];
+                    stus[j] = stus[j + 1];
+                    stus[j + 1] = temp;
+                }
+            }
+        }
+    }
+}
Index: src/Day07_1_ArrayImprove/ArrayPlus_03.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day07_1_ArrayImprove/ArrayPlus_03.java b/src/Day07_1_ArrayImprove/ArrayPlus_03.java
new file mode 100644
--- /dev/null	(date 1661425425544)
+++ b/src/Day07_1_ArrayImprove/ArrayPlus_03.java	(date 1661425425544)
@@ -0,0 +1,94 @@
+package Day07_1_ArrayImprove;
+
+/*
+ * 算法的考查：数组的复制、反转、查找(线性查找、二分法查找)
+ */
+
+public class ArrayPlus_03 {
+    public static void main(String[] args) {
+
+        String[] arr = new String[]{"JJ","DD","MM","BB","GG","AA"};
+
+        //数组的复制(区别于数组变量的赋值：arr1 = arr)
+        String[] arr1 = new String[arr.length];
+        for(int i = 0 ; i < arr1.length ; i++){
+            arr1[i] = arr[i];
+        }
+
+        //数组的反转
+        //方法一：
+//		for(int i = 0;i < arr.length / 2;i++){
+//			String temp = arr[i];
+//			arr[i] = arr[arr.length - i -1];
+//			arr[arr.length - i -1] = temp;
+//		}
+
+        //方法二：
+//		for(int i = 0,j = arr.length - 1;i < j;i++,j--){
+//			String temp = arr[i];
+//			arr[i] = arr[j];
+//			arr[j] = temp;
+//		}
+
+        //遍历
+        for(int i = 0;i < arr.length;i++){
+            System.out.print(arr[i] + "\t");
+        }
+
+        System.out.println();
+
+
+        //查找（或搜索）
+        //线性查找：
+        String dest = "BB";
+        dest = "CC";
+
+        boolean isFlag = true;
+
+        for(int i = 0;i < arr.length;i++){
+
+            if(dest.equals(arr[i])){
+                System.out.println("找到了指定的元素，位置为：" + i);
+                isFlag = false;
+                break;
+            }
+
+        }
+        if(isFlag){
+            System.out.println("很遗憾，没有找到的啦！");
+
+        }
+
+
+        //二分法查找：(熟悉)
+        //前提：所要查找的数组必须有序。
+        int[] arr2 = new int[]{-98,-34,2,34,54,66,79,105,210,333};
+
+        int dest1 = -34;
+        dest1 = 35;
+        int head = 0;//初始的首索引
+        int end = arr2.length - 1;//初始的末索引
+        boolean isFlag1 = true;
+        while(head <= end){
+
+            int middle = (head + end)/2;
+
+            if(dest1 == arr2[middle]){
+                System.out.println("找到了指定的元素，位置为：" + middle);
+                isFlag1 = false;
+                break;
+            }else if(arr2[middle] > dest1){
+                end = middle - 1;
+            }else{//arr2[middle] < dest1
+                head = middle + 1;
+            }
+
+
+        }
+
+        if(isFlag1){
+            System.out.println("很遗憾，没有找到的啦！");
+        }
+
+    }
+}
Index: src/Day07_1_ArrayImprove/ArrayExer_03.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day07_1_ArrayImprove/ArrayExer_03.java b/src/Day07_1_ArrayImprove/ArrayExer_03.java
new file mode 100644
--- /dev/null	(date 1661425728313)
+++ b/src/Day07_1_ArrayImprove/ArrayExer_03.java	(date 1661425728313)
@@ -0,0 +1,4 @@
+package Day07_1_ArrayImprove;
+
+public class ArrayExer_03 {
+}
Index: src/Day07_2_Array_SortAlgorithm/YangHuiTriangle.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day07_2_Array_SortAlgorithm/YangHuiTriangle.java b/src/Day07_2_Array_SortAlgorithm/YangHuiTriangle.java
new file mode 100644
--- /dev/null	(date 1661437749437)
+++ b/src/Day07_2_Array_SortAlgorithm/YangHuiTriangle.java	(date 1661437749437)
@@ -0,0 +1,44 @@
+package Day07_2_Array_SortAlgorithm;
+
+/*
+ * 使用二维数组打印一个 10 行杨辉三角。
+
+【提示】
+ 1. 第一行有 1 个元素, 第 n 行有 n 个元素
+ 2. 每一行的第一个元素和最后一个元素都是 1
+ 3. 从第三行开始, 对于非第一个元素和最后一个元素的元素。即：
+    yanghui[i][j] = yanghui[i-1][j-1] + yanghui[i-1][j];
+ *
+ */
+
+public class YangHuiTriangle {
+    public static void main(String[] args) {
+        //1.声明并初始化二维数组
+        int[][] yangHui = new int[10][];
+
+        //2.给数组的元素赋值
+        for(int i = 0;i < yangHui.length;i++){
+            yangHui[i] = new int[i + 1];
+
+            //2.1 给首末元素赋值
+            yangHui[i][0] = yangHui[i][i] = 1;
+            //2.2 给每行的非首末元素赋值
+            //if(i > 1){
+            for(int j = 1;j < yangHui[i].length - 1;j++){
+                yangHui[i][j] = yangHui[i-1][j-1] + yangHui[i-1][j];
+            }
+            //}
+        }
+
+
+        //3.遍历二维数组
+        for(int i = 0;i < yangHui.length;i++){
+            for(int j = 0;j < yangHui[i].length;j++){
+                System.out.print(yangHui[i][j] + "  ");
+            }
+            System.out.println();
+        }
+
+    }
+}
+
Index: src/Day07_2_Array_SortAlgorithm/BubbleSort.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day07_2_Array_SortAlgorithm/BubbleSort.java b/src/Day07_2_Array_SortAlgorithm/BubbleSort.java
new file mode 100644
--- /dev/null	(date 1661437749447)
+++ b/src/Day07_2_Array_SortAlgorithm/BubbleSort.java	(date 1661437749447)
@@ -0,0 +1,34 @@
+package Day07_2_Array_SortAlgorithm;
+
+/*
+ * 数组的冒泡排序的实现
+ *
+ */
+
+public class BubbleSort {
+    public static void main(String[] args) {
+
+        int[] arr = new int[]{43,32,76,-98,0,64,33,-21,32,99};
+
+        //冒泡排序
+        for(int i = 0;i < arr.length - 1;i++){
+
+            for(int j = 0;j < arr.length - 1 - i;j++){
+
+                if(arr[j] > arr[j + 1]){
+                    int temp = arr[j];
+                    arr[j] = arr[j + 1];
+                    arr[j + 1] = temp;
+                }
+
+            }
+
+        }
+
+
+        for(int i = 0;i < arr.length;i++){
+            System.out.print(arr[i] + "\t");
+        }
+
+    }
+}
Index: src/Day07_2_Array_SortAlgorithm/QuickSort.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day07_2_Array_SortAlgorithm/QuickSort.java b/src/Day07_2_Array_SortAlgorithm/QuickSort.java
new file mode 100644
--- /dev/null	(date 1661476255892)
+++ b/src/Day07_2_Array_SortAlgorithm/QuickSort.java	(date 1661476255892)
@@ -0,0 +1,51 @@
+package Day07_2_Array_SortAlgorithm;
+
+/**
+ * @name 快速排序
+ * @intro  通过一趟排序将待排序记录分割成独立的两部分，其中一部分记录的关键字均比另一部分关键字小，<p>
+ * 则分别对这两部分继续进行排序，直到整个序列有序。
+ * @author shkstart
+ * 2018-12-17
+ */
+
+public class QuickSort {
+    private static void swap(int[] data, int i, int j) {
+        int temp = data[i];
+        data[i] = data[j];
+        data[j] = temp;
+    }
+
+    private static void subSort(int[] data, int start, int end) {
+        if (start < end) {
+            int base = data[start];
+            int low = start;
+            int high = end + 1;
+            while (true) {
+                while (low < end && data[++low] - base <= 0)
+                    ;
+                while (high > start && data[--high] - base >= 0)
+                    ;
+                if (low < high) {
+                    swap(data, low, high);
+                } else {
+                    break;
+                }
+            }
+            swap(data, start, high);
+
+            subSort(data, start, high - 1);//递归调用
+            subSort(data, high + 1, end);
+        }
+    }
+    public static void quickSort(int[] data){
+        subSort(data,0,data.length-1);
+    }
+
+
+    public static void main(String[] args) {
+        int[] data = { 9, -16, 30, 23, -30, -49, 25, 21, 30 };
+        System.out.println("排序之前：\n" + java.util.Arrays.toString(data));
+        quickSort(data);
+        System.out.println("排序之后：\n" + java.util.Arrays.toString(data));
+    }
+}
Index: src/Day06_Array/ArrayDefinition_NewArray.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day06_Array/ArrayDefinition_NewArray.java b/src/Day06_Array/ArrayDefinition_NewArray.java
new file mode 100644
--- /dev/null	(date 1661406136548)
+++ b/src/Day06_Array/ArrayDefinition_NewArray.java	(date 1661406136548)
@@ -0,0 +1,86 @@
+package Day06_Array;
+
+/**
+ * 一、数组的概述
+ * 1.数组的理解：数组(Array)，是多个相同类型数据按一定顺序排列的集合，并使用一个名字命名，
+ * 并通过编号的方式对这些数据进行统一管理。
+ *
+ * 2.数组相关的概念：
+ * >数组名
+ * >元素
+ * >角标、下标、索引
+ * >数组的长度：元素的个数
+ *
+ * 3.数组的特点：
+ * 1）数组是有序排列的
+ * 2）数组属于引用数据类型的变量。数组的元素，既可以是基本数据类型，也可以是引用数据类型
+ * 3）创建数组对象会在内存中开辟一整块连续的空间
+ * 4）数组的长度一旦确定，就不能修改。
+ *
+ * 4. 数组的分类：
+ *   ① 按照维数：一维数组、二维数组、。。。
+ *   ② 按照数组元素的类型：基本数据类型元素的数组、引用数据类型元素的数组
+ *
+ * 5. 一维数组的使用
+ *   ① 一维数组的声明和初始化
+ *   ② 如何调用数组的指定位置的元素
+ *   ③ 如何获取数组的长度
+ *   ④ 如何遍历数组
+ *   ⑤ 数组元素的默认初始化值 ：见ArrayTest1.java
+ *   ⑥ 数组的内存解析 ：见ArrayTest1.java
+ */
+
+public class ArrayDefinition_NewArray {
+    public static void main(String[] args) {
+
+        //1. 一维数组的声明和初始化
+        int num;//声明
+        num = 10;//初始化
+        int id = 1001;//声明 + 初始化
+
+        int[] ids;//声明
+        //1.1 静态初始化:数组的初始化和数组元素的赋值操作同时进行
+        ids = new int[]{1001,1002,1003,1004};
+        //1.2动态初始化:数组的初始化和数组元素的赋值操作分开进行
+        String[] names = new String[5];
+
+        //错误的写法：
+//		int[] arr1 = new int[];
+//		int[5] arr2 = new int[5];
+        int[] arr2_2 = new int[5];
+//		int[] arr3 = new int[3]{1,2,3};
+
+        //也是正确的写法：
+        int[] arr4 = {1,2,3,4,5};//类型推断
+
+        //总结：数组一旦初始化完成，其长度就确定了。
+
+        //2.如何调用数组的指定位置的元素:通过角标的方式调用。
+        //数组的角标（或索引）从0开始的，到数组的长度-1结束。
+        names[0] = "王铭";
+        names[1] = "王赫";
+        names[2] = "张学良";
+        names[3] = "孙居龙";
+        names[4] = "王宏志";//charAt(0)
+//		names[5] = "周扬";
+
+        //3.如何获取数组的长度。
+        //属性:length
+        System.out.println(names.length);//5
+        System.out.println(ids.length);
+
+        //4.如何遍历数组
+		/**
+		System.out.println(names[0]);
+		System.out.println(names[1]);
+		System.out.println(names[2]);
+		System.out.println(names[3]);
+		System.out.println(names[4]);
+		*/
+
+        for(int i = 0 ; i < names.length ; i++){
+            System.out.println(names[i]);
+        }
+
+    }
+}
Index: src/Day09_OOPFunctionAndParm/ArrayUtilTesting.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day09_OOPFunctionAndParm/ArrayUtilTesting.java b/src/Day09_OOPFunctionAndParm/ArrayUtilTesting.java
new file mode 100644
--- /dev/null	(date 1661514066400)
+++ b/src/Day09_OOPFunctionAndParm/ArrayUtilTesting.java	(date 1661514066400)
@@ -0,0 +1,33 @@
+package Day09_OOPFunctionAndParm;
+
+import Day09_OOPFunctionAndParm.ArrayUtil;
+
+public class ArrayUtilTesting {
+    public static void main(String[] args) {
+
+        ArrayUtil util = new ArrayUtil();
+        int[] arr = new int[]{32,34,32,5,3,54,654,-98,0,-53,5};
+        int max = util.getMax(arr);
+        System.out.println("最大值为：" + max);
+
+        System.out.println("排序前：");
+        util.print(arr);
+
+
+
+        util.sort(arr);
+        System.out.println("排序后：");
+        util.print(arr);
+
+//		System.out.println("查找：");
+//		int index = util.getIndex(arr, -5);
+//		if(index >= 0){
+//			System.out.println("找到了，索引地址为：" + index);
+//		}else{
+//			System.out.println("未找到");
+//		}
+
+
+//		util.reverse(arr);
+    }
+}
Index: src/Day09_OOPFunctionAndParm/ArrayUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day09_OOPFunctionAndParm/ArrayUtil.java b/src/Day09_OOPFunctionAndParm/ArrayUtil.java
new file mode 100644
--- /dev/null	(date 1661514213230)
+++ b/src/Day09_OOPFunctionAndParm/ArrayUtil.java	(date 1661514213230)
@@ -0,0 +1,149 @@
+package Day09_OOPFunctionAndParm;
+
+import org.jetbrains.annotations.NotNull;
+
+public class ArrayUtil {
+
+    // 求数组的最大值
+    public int getMax(int @NotNull [] arr) {
+        /*
+        @Null	被注释的元素必须为null
+        @NotNull	被注释的元素不能为null
+        @AssertTrue	被注释的元素必须为true
+        @AssertFalse	被注释的元素必须为false
+        @Min(value)	被注释的元素必须是一个数字，其值必须大于等于指定的最小值
+        @Max(value)	被注释的元素必须是一个数字，其值必须小于等于指定的最大值
+        @DecimalMin(value)	被注释的元素必须是一个数字，其值必须大于等于指定的最小值
+        @DecimalMax(value)	被注释的元素必须是一个数字，其值必须小于等于指定的最大值
+        @Size(max,min)	被注释的元素的大小必须在指定的范围内。
+        @Digits(integer,fraction)	被注释的元素必须是一个数字，其值必须在可接受的范围内
+        @Past	被注释的元素必须是一个过去的日期
+        @Future	被注释的元素必须是一个将来的日期
+        @Pattern(value)	被注释的元素必须符合指定的正则表达式。
+        @Email	被注释的元素必须是电子邮件地址
+        @Length	被注释的字符串的大小必须在指定的范围内
+        @NotEmpty	被注释的字符串必须非空
+        @Range	被注释的元素必须在合适的范围内
+         */
+        int maxValue = arr[0];
+        for (int i = 1; i < arr.length; i++) {
+            if (maxValue < arr[i]) {
+                maxValue = arr[i];
+            }
+        }
+        return maxValue;
+    }
+
+    // 求数组的最小值
+    public int getMin(int[] arr) {
+        int minValue = arr[0];
+        for (int i = 1; i < arr.length; i++) {
+            if (minValue > arr[i]) {
+                minValue = arr[i];
+            }
+        }
+        return minValue;
+    }
+
+    // 求数组的总和
+    public int getSum(int[] arr) {
+
+        int sum = 0;
+        for (int i = 0; i < arr.length; i++) {
+            sum += arr[i];
+        }
+        return sum;
+    }
+
+    // 求数组的平均值
+    public int getAvg(int[] arr) {
+
+        return getSum(arr) / arr.length;
+    }
+
+    //如下的两个同名方法构成了重载
+    //Java 允许同一个类中定义多个同名方法，只要它们的形参列表不同即可。
+    //如果同一个类中包含了两个或两个以上方法名相同的方法，但形参列表不同，这种情况被称为方法重载（overload）。
+
+    // 反转数组
+    public void reverse(int[] arr) {
+        for (int i = 0; i < arr.length / 2; i++) {
+            int temp = arr[i];
+            arr[i] = arr[arr.length - i - 1];
+            arr[arr.length - i - 1] = temp;
+        }
+    }
+
+    public void reverse(String[] arr){
+
+    }
+
+    // 复制数组
+    public int[] copy(int[] arr) {
+        int[] arr1 = new int[arr.length];
+        for (int i = 0; i < arr1.length; i++) {
+            arr1[i] = arr[i];
+        }
+        return arr1;
+    }
+
+    // 数组排序
+    public void sort(int[] arr) {
+        // 冒泡排序
+        for (int i = 0; i < arr.length - 1; i++) {
+
+            for (int j = 0; j < arr.length - 1 - i; j++) {
+
+                if (arr[j] > arr[j + 1]) {
+//					int temp = arr[j];
+//					arr[j] = arr[j + 1];
+//					arr[j + 1] = temp;
+                    //错误的：
+//					swap(arr[j],arr[j + 1]);
+                    //正确的：
+                    swap(arr,j,j + 1);
+                }
+
+            }
+
+        }
+    }
+
+    //错误的：交换数组中指定两个位置元素的值
+//	public void swap(int i,int j){
+//		int temp = i;
+//		i = j;
+//		j = temp;
+//	}
+    //正确的：交换数组中指定两个位置元素的值
+    public void swap(int[] arr,int i,int j){
+        int temp = arr[i];
+        arr[i] = arr[j];
+        arr[j] = temp;
+    }
+
+
+    // 遍历数组
+    public void print(int[] arr) {
+        for (int i = 0; i < arr.length; i++) {
+            System.out.print(arr[i] + "\t");
+        }
+        System.out.println();
+    }
+
+    // 查找指定元素
+    public int getIndex(int[] arr, int dest) {
+        // 线性查找：
+
+        for (int i = 0; i < arr.length; i++) {
+
+            if (dest == arr[i]) {
+                return i;
+            }
+
+        }
+
+        return -1;//返回一个负数，表示没有找到
+    }
+
+}
Index: src/Day09_OOPFunctionAndParm/AnonymousObject.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day09_OOPFunctionAndParm/AnonymousObject.java b/src/Day09_OOPFunctionAndParm/AnonymousObject.java
new file mode 100644
--- /dev/null	(date 1661657905103)
+++ b/src/Day09_OOPFunctionAndParm/AnonymousObject.java	(date 1661657905103)
@@ -0,0 +1,73 @@
+package Day09_OOPFunctionAndParm;
+
+/*
+ * 一、理解“万事万物皆对象”
+ * 1.在Java语言范畴中，我们都将功能、结构等封装到类中，通过类的实例化，来调用具体的功能结构
+ * 		>Scanner,String等
+ * 		>文件：File
+ * 		>网络资源：URL
+ * 2.涉及到Java语言与前端Html、后端的数据库交互时，前后端的结构在Java层面交互时，都体现为类、对象。
+ *
+ * 二、内存解析的说明
+ * 1.引用类型的变量，只可能存储两类值：null  或  地址值（含变量的类型）
+ *
+ * 三、匿名对象的使用
+ * 1.理解：我们创建的对象，没有显式的赋给一个变量名。即为匿名对象
+ * 2.特征：匿名对象只能调用一次。
+ * 3.使用：如下
+ *
+ */
+
+public class AnonymousObject {
+    public static void main(String[] args) {
+        Phone p = new Phone();
+//		p = null;
+        System.out.println(p);
+
+        p.sendEmail();
+        p.playGame();
+
+
+        //匿名对象
+//		new Phone().sendEmail();
+//		new Phone().playGame();
+
+        new Phone().price = 1999;
+        new Phone().showPrice();//0.0
+
+        //**********************************
+        PhoneMall mall = new PhoneMall();
+//		mall.show(p);
+        //匿名对象的使用
+        mall.show(new Phone());
+
+    }
+}
+
+class PhoneMall{
+    public void show(Phone phone){
+        //使用类之前都需要进行说明
+        phone.sendEmail();
+        phone.playGame();
+    }
+
+}
+
+
+class Phone{
+    double price;//价格
+
+    public void sendEmail(){
+        System.out.println("发送邮件");
+    }
+
+    public void playGame(){
+        System.out.println("玩游戏");
+    }
+
+    public void showPrice(){
+        System.out.println("手机价格为：" + price);
+    }
+
+}
+
Index: src/Day06_Array/TwoDimensionalArray_02.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day06_Array/TwoDimensionalArray_02.java b/src/Day06_Array/TwoDimensionalArray_02.java
new file mode 100644
--- /dev/null	(date 1661408229122)
+++ b/src/Day06_Array/TwoDimensionalArray_02.java	(date 1661408229122)
@@ -0,0 +1,48 @@
+package Day06_Array;
+
+/*
+ * 二维数组的使用：
+ * 	规定：二维数组分为外层数组的元素，内层数组的元素
+ * 		int[][] arr = new int[4][3];
+ * 		外层元素：arr[0],arr[1]等
+ * 		内层元素：arr[0][0],arr[1][2]等
+ *
+ *   ⑤ 数组元素的默认初始化值
+ *   针对于初始化方式一：比如：int[][] arr = new int[4][3];
+ *      外层元素的初始化值为：地址值
+ *      内层元素的初始化值为：与一维数组初始化情况相同
+ *
+ *   针对于初始化方式二：比如：int[][] arr = new int[4][];
+ *   	外层元素的初始化值为：null
+ *      内层元素的初始化值为：不能调用，否则报错。
+ *
+ *   ⑥ 数组的内存解析
+ *
+ */
+
+public class TwoDimensionalArray_02 {
+    public static void main(String[] args) {
+
+        int[][] arr = new int[4][3];
+        System.out.println(arr[0]);//[I@15db9742
+        System.out.println(arr[0][0]);//0
+
+//		System.out.println(arr);//[[I@6d06d69c
+
+        System.out.println("*****************");
+        float[][] arr1 = new float[4][3];
+        System.out.println(arr1[0]);//地址值
+        System.out.println(arr1[0][0]);//0.0
+
+        System.out.println("*****************");
+        String[][] arr2 = new String[4][2];
+        System.out.println(arr2[1]);//地址值
+        System.out.println(arr2[1][1]);//null
+
+        System.out.println("*****************");
+        double[][] arr3 = new double[4][];
+        System.out.println(arr3[1]);//null
+//		System.out.println(arr3[1][0]);//报错
+
+    }
+}
Index: src/Day08_OOPIntro/OOPIntro.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day08_OOPIntro/OOPIntro.txt b/src/Day08_OOPIntro/OOPIntro.txt
new file mode 100644
--- /dev/null	(date 1661477532924)
+++ b/src/Day08_OOPIntro/OOPIntro.txt	(date 1661477532924)
@@ -0,0 +1,167 @@
+一、
+* 一、Java面向对象学习的三条主线：（第4-6章）
+* 1.Java类及类的成员：属性、方法、构造器；代码块、内部类
+*
+* 2.面向对象的三大特征：封装性、继承性、多态性、(抽象性)
+*
+* 3.其它关键字：this、super、static、final、abstract、interface、package、import等
+*
+* “大处着眼，小处着手”
+*
+*
+* 二、“人把大象装进冰箱”
+*
+* 1.面向过程：强调的是功能行为，以函数为最小单位，考虑怎么做。
+*
+* ① 把冰箱门打开
+* ② 抬起大象，塞进冰箱
+* ② 把冰箱门关闭
+*
+* 2.面向对象：强调具备了功能的对象，以类/对象为最小单位，考虑谁来做。
+*
+* 人{
+* 		打开(冰箱){
+* 			冰箱.开开();
+* 		}
+*
+* 		抬起(大象){
+* 			大象.进入(冰箱);
+* 		}
+*
+* 		关闭(冰箱){
+* 			冰箱.闭合();
+* 		}
+*
+* }
+*
+*
+* 冰箱{
+* 		开开(){}
+* 		闭合(){}
+* }
+*
+* 大象{
+* 		进入(冰箱){
+* 		}
+* }
+*
+* 三、面向对象的两个要素：
+* 类：对一类事物的描述，是抽象的、概念上的定义
+* 对象：是实际存在的该类事物的每个个体，因而也称为实例(instance)
+* >面向对象程序设计的重点是类的设计
+* >设计类，就是设计类的成员。
+*
+*
+二、
+* 类中方法的声明和使用
+*
+* 方法：描述类应该具有的功能。
+* 比如：Math类：sqrt()\random() \...
+*     Scanner类：nextXxx() ...
+*     Arrays类：sort() \ binarySearch() \ toString() \ equals() \ ...
+*
+* 1.举例：
+* public void eat(){}
+* public void sleep(int hour){}
+* public String getName(){}
+* public String getNation(String nation){}
+*
+* 2. 方法的声明：权限修饰符  返回值类型  方法名(形参列表){
+* 					方法体
+* 			  }
+*   注意：static、final、abstract 来修饰的方法，后面再讲。
+*
+* 3. 说明：
+* 		3.1 关于权限修饰符：默认方法的权限修饰符先都使用public
+* 			Java规定的4种权限修饰符：private、public、缺省、protected  -->封装性再细说
+*
+* 		3.2 返回值类型： 有返回值  vs 没有返回值
+* 			3.2.1  如果方法有返回值，则必须在方法声明时，指定返回值的类型。同时，方法中，需要使用
+*                return关键字来返回指定类型的变量或常量：“return 数据”。
+* 				  如果方法没有返回值，则方法声明时，使用void来表示。通常，没有返回值的方法中，就不需要
+*               使用return.但是，如果使用的话，只能“return;”表示结束此方法的意思。
+*
+* 			3.2.2 我们定义方法该不该有返回值？
+* 				① 题目要求
+* 				② 凭经验：具体问题具体分析
+*
+*      3.3 方法名：属于标识符，遵循标识符的规则和规范，“见名知意”
+*
+*      3.4 形参列表： 方法可以声明0个，1个，或多个形参。
+*         3.4.1 格式：数据类型1 形参1,数据类型2 形参2,...
+*
+*         3.4.2 我们定义方法时，该不该定义形参？
+*         		① 题目要求
+*         		② 凭经验：具体问题具体分析
+*
+*      3.5 方法体：方法功能的体现。 		
+*
+*  4.return关键字的使用：
+*  	1.使用范围：使用在方法体中
+*  	2.作用：① 结束方法
+*            ② 针对于有返回值类型的方法，使用"return 数据"方法返回所要的数据。
+*      3.注意点：return关键字后面不可以声明执行语句。
+*
+*  5. 方法的使用中，可以调用当前类的属性或方法
+*  		特殊的：方法A中又调用了方法A:递归方法。
+*     方法中，不可以定义方法。
+*/
+
+/*
+ * 一、设计类，其实就是设计类的成员
+ *
+ *  属性 = 成员变量 = field = 域、字段
+ *  方法 = 成员方法 = 函数 = method
+ *
+ *  创建类的对象 = 类的实例化 = 实例化类
+ *
+ * 二、类和对象的使用（面向对象思想落地的实现）：
+ *  1.创建类，设计类的成员
+ *  2.创建类的对象
+ *  3.通过“对象.属性”或“对象.方法”调用对象的结构
+ *
+ * 三、如果创建了一个类的多个对象，则每个对象都独立的拥有一套类的属性。（非static的）
+ *   意味着：如果我们修改一个对象的属性a，则不影响另外一个对象属性a的值。
+ *
+ * 四、对象的内存解析
+ */
+
+ /*
+  * 类中属性的使用
+  *
+  * 属性（成员变量）   vs  局部变量
+  * 1.相同点：
+  * 		1.1  定义变量的格式：数据类型  变量名 = 变量值
+  * 		1.2 先声明，后使用
+  * 		1.3 变量都有其对应的作用域
+  *
+  *
+  * 2.不同点：
+  * 		2.1 在类中声明的位置的不同
+  * 		属性：直接定义在类的一对{}内
+  * 		局部变量：声明在方法内、方法形参、代码块内、构造器形参、构造器内部的变量
+  *
+  * 		2.2 关于权限修饰符的不同
+  * 		属性：可以在声明属性时，指明其权限，使用权限修饰符。
+  * 			常用的权限修饰符：private、public、缺省、protected  --->封装性
+  * 			目前，大家声明属性时，都使用缺省就可以了。
+  * 		局部变量：不可以使用权限修饰符。
+  *
+  * 		2.3 默认初始化值的情况：
+  * 		属性：类的属性，根据其类型，都有默认初始化值。
+  * 			整型（byte、short、int、long）：0
+  * 			浮点型（float、double）：0.0
+  * 			字符型（char）：0  （或'\u0000'）
+  * 			布尔型（boolean）：false
+  *
+  * 			引用数据类型（类、数组、接口）：null
+  *
+  * 		局部变量：没有默认初始化值。
+  *  		意味着，我们在调用局部变量之前，一定要显式赋值。
+  * 			特别地：形参在调用时，我们赋值即可。
+  *
+  * 		2.4 在内存中加载的位置：
+  * 		属性：加载到堆空间中   （非static）
+  * 		局部变量：加载到栈空间
+  *
+  */
\ No newline at end of file
Index: src/Day06_Array/ArrayDefinition_InitializeAndMenmory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day06_Array/ArrayDefinition_InitializeAndMenmory.java b/src/Day06_Array/ArrayDefinition_InitializeAndMenmory.java
new file mode 100644
--- /dev/null	(date 1661406136541)
+++ b/src/Day06_Array/ArrayDefinition_InitializeAndMenmory.java	(date 1661406136541)
@@ -0,0 +1,56 @@
+package Day06_Array;
+
+/**
+ * @⑤ 数组元素的默认初始化值 <p>
+ * 		> 数组元素是整型：0 <p>
+ * 		> 数组元素是浮点型：0.0 <p>
+ * 		> 数组元素是char型：0或'\u0000'，而非'0' <p>
+ * 		> 数组元素是boolean型：false <p>
+ * 		> 数组元素是引用数据类型：null <p>
+ *
+ *  @⑥ 数组的内存解析
+ */
+
+public class ArrayDefinition_InitializeAndMenmory {
+    public static void main(String[] args) {
+        //5.数组元素的默认初始化值
+        int[] arr = new int[4];
+        for(int i = 0 ; i < arr.length ; i++){
+            System.out.println(arr[i]);
+        }
+        System.out.println("**********");
+
+        short[] arr1 = new short[4];
+        for(int i = 0;i < arr1.length;i++){
+            System.out.println(arr1[i]);
+        }
+        System.out.println("**********");
+
+        float[] arr2 = new float[5];
+        for(int i = 0;i < arr2.length;i++){
+            System.out.println(arr2[i]);
+        }
+
+        System.out.println("**********");
+
+        char[] arr3 = new char[4];
+        for(int i = 0;i < arr3.length;i++){
+            System.out.println("----" + arr3[i] + "****");
+        }
+
+        if(arr3[0] == 0){
+            System.out.println("你好！");
+        }
+
+        System.out.println("**********");
+        boolean[] arr4 = new boolean[5];
+        System.out.println(arr4[0]);
+
+        System.out.println("**********");
+        String[] arr5 = new String[5];
+        System.out.println(arr5[0]);
+        if(arr5[0] == null){
+            System.out.println("北京天气不错！");
+        }
+    }
+}
Index: src/Day08_OOPIntro/PersonExer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day08_OOPIntro/PersonExer.java b/src/Day08_OOPIntro/PersonExer.java
new file mode 100644
--- /dev/null	(date 1661485901817)
+++ b/src/Day08_OOPIntro/PersonExer.java	(date 1661485901817)
@@ -0,0 +1,40 @@
+package Day08_OOPIntro;
+
+/*
+ * 要求：
+ * (1)创建Person类的对象，设置该对象的name、age和sex属性，调用study方法，
+ * 输出字符串“studying”，调用showAge()方法显示age值，
+ * 调用addAge()方法给对象的age属性值增加2岁。
+ * (2)创建第二个对象，执行上述操作，体会同一个类的不同对象之间的关系。
+ *
+ */
+
+import Day08_OOPIntro.PersonUniltil;
+
+public class PersonExer {
+    public static void main(String[] args) {
+        PersonUniltil p1 = new PersonUniltil();
+
+        p1.name = "Tom";
+        p1.age = 18;
+        p1.sex = 1;
+
+        p1.study();
+
+        p1.showAge();
+
+        int newAge = p1.addAge(2);
+        System.out.println(p1.name + "的新年龄为：" + newAge);
+
+        System.out.println(p1.age);//20
+
+        //*************************
+        PersonUniltil p2 = new PersonUniltil();
+        p2.showAge();//0
+        p2.addAge(10);
+        p2.showAge();//10
+
+        p1.showAge();
+
+    }
+}
Index: src/Day08_OOPIntro/ClassIntro.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day08_OOPIntro/ClassIntro.java b/src/Day08_OOPIntro/ClassIntro.java
new file mode 100644
--- /dev/null	(date 1661477373650)
+++ b/src/Day08_OOPIntro/ClassIntro.java	(date 1661477373650)
@@ -0,0 +1,75 @@
+package Day08_OOPIntro;
+
+import java.util.Arrays;
+
+public class ClassIntro {
+    public static void main(String[] args) {
+
+        Customer cust1 = new Customer();
+
+        cust1.eat();
+
+        //测试形参是否需要设置的问题
+//		int[] arr = new int[]{3,4,5,2,5};
+//		cust1.sort();
+
+        cust1.sleep(8);
+
+    }
+}
+
+//客户类
+class Customer{
+
+    //属性
+    String name;
+    int age;
+    boolean isMale;
+
+    //方法
+    public void eat(){
+        System.out.println("客户吃饭");
+        return;
+        //return后不可以声明表达式
+//		System.out.println("hello");
+    }
+
+    public void sleep(int hour){
+        System.out.println("休息了" + hour + "个小时");
+
+        eat();
+//		sleep(10);
+    }
+
+    public String getName(){
+
+        if(age > 18){
+            return name;
+
+        }else{
+            return "Tom";
+        }
+    }
+
+    public String getNation(String nation){
+        String info = "我的国籍是：" + nation;
+        return info;
+    }
+
+    //体会形参是否需要设置的问题
+//	public void sort(int[] arr){
+//
+//	}
+//	public void sort(){
+//		int[] arr = new int[]{3,4,5,2,5,63,2,5};
+//		//。。。。
+//	}
+
+    public void info(){
+        //错误的
+//		public void swim(){
+//
+//		}
+
+    }
+}
Index: src/Day08_OOPIntro/GirlFriendIntro.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day08_OOPIntro/GirlFriendIntro.java b/src/Day08_OOPIntro/GirlFriendIntro.java
new file mode 100644
--- /dev/null	(date 1661477436921)
+++ b/src/Day08_OOPIntro/GirlFriendIntro.java	(date 1661477436921)
@@ -0,0 +1,57 @@
+package Day08_OOPIntro;
+
+//测试类
+public class GirlFriendIntro {
+    public static void main(String[] args) {
+        //2. 创建Person类的对象
+        Person p1 = new Person();
+        //Scanner scanner = new Scanner(System.in);
+
+        //调用对象的结构：属性、方法
+        //1.调用属性：“对象.属性”
+        p1.name = "Tom";
+        p1.isMale = true;
+        System.out.println(p1.name);
+
+        //2.调用方法：“对象.方法”
+        p1.eat();
+        p1.sleep();
+        p1.talk("Chinese");
+
+        //*******************************
+        Person p2 = new Person();
+        System.out.println(p2.name);//null
+        System.out.println(p2.isMale);
+        //*******************************
+        //将p1变量保存的对象地址值赋给p3,导致p1和p3指向了堆空间中的同一个对象实体。
+        Person p3 = p1;
+        System.out.println(p3.name);//Tom
+
+        p3.age = 10;
+        System.out.println(p1.age);//10
+
+    }
+}
+
+//1.创建类，设计类的成员
+class Person{
+
+    //属性
+    String name;
+    int age = 1;
+    boolean isMale;
+
+    //方法
+    public void eat(){
+        System.out.println("人可以吃饭");
+    }
+
+    public void sleep(){
+        System.out.println("人可以睡觉");
+    }
+
+    public void talk(String language){
+        System.out.println("人可以说话,使用的是：" + language);
+    }
+
+}
Index: src/Day06_Array/TwoDimensionalArray_01.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day06_Array/TwoDimensionalArray_01.java b/src/Day06_Array/TwoDimensionalArray_01.java
new file mode 100644
--- /dev/null	(date 1661406714271)
+++ b/src/Day06_Array/TwoDimensionalArray_01.java	(date 1661406714271)
@@ -0,0 +1,63 @@
+package Day06_Array;
+
+/*
+ * 二维数组的使用
+ *
+ * 1.理解：
+ * 对于二维数组的理解，我们可以看成是一维数组array1又作为另一个一维数组array2的元素而存在。
+ * 其实，从数组底层的运行机制来看，其实没有多维数组。
+ *
+ * 2. 二维数组的使用:
+ *   ① 二维数组的声明和初始化
+ *   ② 如何调用数组的指定位置的元素
+ *   ③ 如何获取数组的长度
+ *   ④ 如何遍历数组
+ *   ⑤ 数组元素的默认初始化值 :见 TwoDimensionalArray_02.java
+ *   ⑥ 数组的内存解析 :见 TwoDimensionalArray_02.java
+ *
+ */
+
+public class TwoDimensionalArray_01 {
+    public static void main(String[] args) {
+        //1.二维数组的声明和初始化
+        int[] arr = new int[]{1,2,3};//一维数组
+
+        //静态初始化
+        int[][] arr1 = new int[][]{{1,2,3},{4,5},{6,7,8}};
+        //动态初始化1
+        String[][] arr2 = new String[3][2];
+        //动态初始化2
+        String[][] arr3 = new String[3][];
+
+        //错误的情况
+//		String[][] arr4 = new String[][4];
+//		String[4][3] arr5 = new String[][];
+//		int[][] arr6 = new int[4][3]{{1,2,3},{4,5},{6,7,8}};
+
+        //也是正确的写法：
+        int[] arr4[] = new int[][]{{1,2,3},{4,5,9,10},{6,7,8}};
+        int[] arr5[] = {{1,2,3},{4,5},{6,7,8}};
+
+        //2.如何调用数组的指定位置的元素
+        System.out.println(arr1[0][1]);//2
+        System.out.println(arr2[1][1]);//null
+
+        arr3[1] = new String[4];
+        System.out.println(arr3[1][0]);
+
+        //3.获取数组的长度
+        System.out.println(arr4.length);//3
+        System.out.println(arr4[0].length);//3
+        System.out.println(arr4[1].length);//4
+
+        //4.如何遍历二维数组
+        for(int i = 0 ; i < arr4.length ; i++){
+        //增强型循环：for (int[] ints : arr4)
+            for(int j = 0;j < arr4[i].length;j++){
+                System.out.print(arr4[i][j] + "  ");
+            }
+            System.out.println();
+        }
+
+    }
+}
Index: src/Day05_Loop/PrimeNumber_02.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Day05_Loop;\r\n\r\n/*\r\n100000以内的所有质数的输出。实现方式一\r\n质数：素数，只能被1和它本身整除的自然数。-->从2开始，到这个数-1结束为止，都不能被这个数本身整除。\r\n\r\n对PrimeNumberTest.java文件中质数输出问题的优化\r\n*/\r\n\r\nclass PrimeNumber_02 {\r\n    public static void main(String[] args) {\r\n\r\n        boolean isFlag = true;//标识i是否被j除尽，一旦除尽，修改其值\r\n        int count = 0;//记录质数的个数\r\n\r\n        //获取当前时间距离1970-01-01 00:00:00 的毫秒数\r\n        long start = System.currentTimeMillis();\r\n\r\n        for(int i = 2;i <= 100000;i++){//遍历100000以内的自然数\r\n\r\n            //优化二：对本身是质数的自然数是有效的。\r\n            //for(int j = 2;j < i;j++){\r\n            for(int j = 2;j <= Math.sqrt(i);j++){//j:被i去除\r\n\r\n                if(i % j == 0){ //i被j除尽\r\n                    isFlag = false;\r\n                    break;//优化一：只对本身非质数的自然数是有效的。\r\n                }\r\n\r\n            }\r\n            //\r\n            if(isFlag == true){\r\n                //System.out.println(i);\r\n                count++;\r\n            }\r\n            //重置isFlag\r\n            isFlag = true;\r\n\r\n        }\r\n\r\n        //获取当前时间距离1970-01-01 00:00:00 的毫秒数\r\n        long end = System.currentTimeMillis();\r\n        System.out.println(\"质数的个数为：\" + count);\r\n        System.out.println(\"所花费的时间为：\" + (end - start));//17110 - 优化一：break:1546 - 优化二：13\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Day05_Loop/PrimeNumber_02.java b/src/Day05_Loop/PrimeNumber_02.java
--- a/src/Day05_Loop/PrimeNumber_02.java	(revision 84b49fea3e843afe85fec090768072255be9ec25)
+++ b/src/Day05_Loop/PrimeNumber_02.java	(date 1661395708429)
@@ -41,7 +41,7 @@
         //获取当前时间距离1970-01-01 00:00:00 的毫秒数
         long end = System.currentTimeMillis();
         System.out.println("质数的个数为：" + count);
-        System.out.println("所花费的时间为：" + (end - start));//17110 - 优化一：break:1546 - 优化二：13
+        System.out.println("所花费的时间为：" + (end - start) + " million seconds");//17110 - 优化一：break:1546 - 优化二：13
 
     }
 }
